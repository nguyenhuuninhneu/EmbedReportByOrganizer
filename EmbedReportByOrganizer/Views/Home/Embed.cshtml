@using EmbedReportByOrganizer.Models


@{
    ViewBag.Title = "Embed Report";
    var report = ViewBag.Report as GetReportInfoModel;
    string error = report.Message;
    string embedUrl = report.EmbedUrl;
    string token = report.Token;
    string reportId = report.ReportId;
}

<h1>Embed Report</h1>
<div class="row">
    <div class="report-wrapper col-lg-12 col-md-12 mt-12">
        <img src="~/Content/img/spinner.svg" id="report-spinner" class="spinner col-lg-12 col-md-12" alt="loader">
        <div id="report-container" class="report-container col-lg-12 col-md-12 mt-12"></div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">

        $(function () {
            function showEmbedContainer(componentSpinner, componentContainer) {
                componentSpinner.hide();

                // Show embed container
                componentContainer.css({ visibility: "visible" });

                // Remove height and width property from embed container
                componentContainer.css({ "height": "", "width": "" });
            }
             async function embedReportSelf() {

                 // For setting type of token in embed config
                 let models = window["powerbi-client"].models;
                 let embedType = "report";

                 let embedUrl;

                 try {
                     // Retrieves embed url for Power BI report
                     embedUrl = "@embedUrl";
                 } catch (error) {
                     showError(error);
                 }

                 let reportConfig = {
                     type: embedType,
                     tokenType: models.TokenType.Aad,
                     accessToken: "@token",
                     embedUrl: embedUrl,

                     // Enable this setting to remove gray shoulders from embedded report
                     // settings: {
                     //	 background: models.BackgroundType.Transparent
                     // }
                 };

                 // Check if the embed url is for RDL report
                 let isRDLReport = embedUrl.toLowerCase().indexOf("/rdlembed?") >= 0;

                 // Check if reset is required
                 let resetRequired = false || isRDLReport;


                 // Reset report container in case the current report or perviously embedded report is a RDL Report
                 if (resetRequired) {
                     powerbi.reset($("#report-container").get(0));
                 }

                 // Show report container as thertoken is no loaded event for RDL reports
                 if (isRDLReport) {
                     $(".report-wrapper").addClass("transparent-bg");
                     showEmbedContainer($('#report-spinner'), $('#report-container'));
                 }

                 // Embed Power BI report
                 let report = powerbi.embed($('#report-container').get(0), reportConfig);

                 // Clear any other loaded handler events
                 report.off("loaded");

                 // Triggers when a report schema is successfully loaded
                 report.on("loaded", function () {
                     console.log("Report loaded");
                     $(".report-wrapper").addClass("transparent-bg");
                     showEmbedContainer($('#report-spinner'), $('#report-container'));
                 });

                 // Clear any other rendered handler events
                 report.off("rendered");

                 // Triggers when a report is successfully embedded in UI
                 report.on("rendered", function () {
                     console.log("Report render successful");
                 });

                 // Clear any other error handler event
                 report.off("error");

                 // Below patch of code is for handling errors that occur during embedding
                 report.on("error", function (event) {
                     let errorMsg = event.detail;

                     // Use errorMsg variable to log error in any destination of choice
                     console.error(errorMsg);
                     return;
                 });
                 //report.switchMode("edit");
                 //$('#refresh-report').on('click', function () {
                 //    // Switch to edit mode.

                 //});
                 //$('#save-report').on('click', function () {
                 //    // Switch to edit mode.
                 //    report.save();
                 //});
            }
            var error = '@error';
            if (error != null && error != '' && error != undefined) {
                alert(error);
            } else {
                embedReportSelf();

            }

        });
    </script>

}

